CREATE TABLE LUM_Attachment (attachmentid INT AUTO_INCREMENT, userid INT DEFAULT '0' NOT NULL, discussionid INT DEFAULT '0' NOT NULL, commentid INT DEFAULT '0' NOT NULL, title VARCHAR(200) DEFAULT '' NOT NULL, description TEXT NOT NULL, name VARCHAR(200) DEFAULT '' NOT NULL, path TEXT NOT NULL, size INT DEFAULT '0' NOT NULL, mimetype VARCHAR(200) DEFAULT '' NOT NULL, datecreated DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, datemodified DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, PRIMARY KEY(attachmentid)) ENGINE = INNODB;
CREATE TABLE LUM_CatalogItems (discussionid INT UNSIGNED, imageurl VARCHAR(255), price INT UNSIGNED NOT NULL, PRIMARY KEY(discussionid)) ENGINE = INNODB;
CREATE TABLE LUM_Category (categoryid INT AUTO_INCREMENT, name VARCHAR(100) DEFAULT '' NOT NULL, description TEXT, priority INT DEFAULT '0' NOT NULL, subscribeable INT NOT NULL, PRIMARY KEY(categoryid)) ENGINE = INNODB;
CREATE TABLE LUM_CategoryBlock (categoryid INT, userid INT, blocked VARCHAR(1) DEFAULT '1' NOT NULL, PRIMARY KEY(categoryid, userid)) ENGINE = INNODB;
CREATE TABLE LUM_CategoryRoleBlock (id BIGINT AUTO_INCREMENT, categoryid INT DEFAULT '0' NOT NULL, roleid INT DEFAULT '0' NOT NULL, blocked VARCHAR(1) DEFAULT '0' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE LUM_Comment (commentid INT AUTO_INCREMENT, discussionid INT, authuserid INT DEFAULT '0' NOT NULL, datecreated DATETIME, edituserid INT, dateedited DATETIME, whisperuserid INT, body TEXT, formattype VARCHAR(20), deleted VARCHAR(1) DEFAULT '0' NOT NULL, datedeleted DATETIME, deleteuserid INT DEFAULT '0' NOT NULL, remoteip VARCHAR(100) DEFAULT NULL, PRIMARY KEY(commentid, discussionid)) ENGINE = INNODB;
CREATE TABLE LUM_Comment_has_LUM_Entity (commentid INT, entityid INT, entitytype VARCHAR(45), PRIMARY KEY(commentid, entityid, entitytype)) ENGINE = INNODB;
CREATE TABLE LUM_Discussion (discussionid INT AUTO_INCREMENT, authuserid INT DEFAULT '0' NOT NULL, whisperuserid INT DEFAULT '0' NOT NULL, firstcommentid INT DEFAULT '0' NOT NULL, lastuserid INT DEFAULT '0' NOT NULL, active VARCHAR(1) DEFAULT '1' NOT NULL, closed VARCHAR(1) DEFAULT '0' NOT NULL, sticky VARCHAR(1) DEFAULT '0' NOT NULL, sink VARCHAR(1) DEFAULT '0' NOT NULL, name VARCHAR(100) DEFAULT '' NOT NULL, datecreated DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, datelastactive DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, countcomments INT DEFAULT '1' NOT NULL, categoryid INT, whispertolastuserid INT, whisperfromlastuserid INT, datelastwhisper DATETIME, totalwhispercount INT DEFAULT '0' NOT NULL, PRIMARY KEY(discussionid)) ENGINE = INNODB;
CREATE TABLE LUM_DiscussionHasTags (discussionid INT, tagid INT, created DATETIME, PRIMARY KEY(discussionid, tagid)) ENGINE = INNODB;
CREATE TABLE LUM_DiscussionTags (tagid INT AUTO_INCREMENT, tag VARCHAR(255) NOT NULL, PRIMARY KEY(tagid)) ENGINE = INNODB;
CREATE TABLE LUM_DiscussionUserWhisperFrom (discussionid INT, whisperfromuserid INT, lastuserid INT DEFAULT '0' NOT NULL, countwhispers INT DEFAULT '0' NOT NULL, datelastactive DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, PRIMARY KEY(discussionid, whisperfromuserid)) ENGINE = INNODB;
CREATE TABLE LUM_DiscussionUserWhisperTo (discussionid INT, whispertouserid INT, lastuserid INT DEFAULT '0' NOT NULL, countwhispers INT DEFAULT '0' NOT NULL, datelastactive DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, PRIMARY KEY(discussionid, whispertouserid)) ENGINE = INNODB;
CREATE TABLE LUM_Entity_Place (entityplaceid INT UNSIGNED AUTO_INCREMENT, name VARCHAR(255) NOT NULL, address TEXT NOT NULL, city VARCHAR(255) NOT NULL, country VARCHAR(255) NOT NULL, PRIMARY KEY(entityplaceid)) ENGINE = INNODB;
CREATE TABLE LUM_Event (discussionid INT, date DATE NOT NULL, city VARCHAR(255), country VARCHAR(255), PRIMARY KEY(discussionid)) ENGINE = INNODB;
CREATE TABLE LUM_IpHistory (iphistoryid INT AUTO_INCREMENT, remoteip VARCHAR(30) DEFAULT '' NOT NULL, userid INT DEFAULT '0' NOT NULL, datelogged DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, PRIMARY KEY(iphistoryid)) ENGINE = INNODB;
CREATE TABLE LUM_Label (labelid INT UNSIGNED AUTO_INCREMENT, categoryid INT UNSIGNED NOT NULL, websiteurl TEXT NOT NULL, imageurl TEXT NOT NULL, categoryuri TEXT NOT NULL, sidebarhtml TEXT NOT NULL, PRIMARY KEY(labelid)) ENGINE = INNODB;
CREATE TABLE LUM_Notifi (notifiid INT AUTO_INCREMENT, userid INT NOT NULL, method VARCHAR(10) NOT NULL, selectid INT NOT NULL, PRIMARY KEY(notifiid)) ENGINE = INNODB;
CREATE TABLE LUM_Notify (notifyid INT AUTO_INCREMENT, userid INT DEFAULT '0' NOT NULL, method VARCHAR(10) DEFAULT '' NOT NULL, selectid INT DEFAULT '0' NOT NULL, PRIMARY KEY(notifyid)) ENGINE = INNODB;
CREATE TABLE LUM_Poll (pollid INT AUTO_INCREMENT, discussionid INT DEFAULT '0' NOT NULL, userid INT DEFAULT '0' NOT NULL, name VARCHAR(200) DEFAULT '' NOT NULL, datecreated DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, datestart DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, dateend DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, totalvotes INT DEFAULT '0' NOT NULL, priority INT DEFAULT '0' NOT NULL, PRIMARY KEY(pollid)) ENGINE = INNODB;
CREATE TABLE LUM_PollBlock (id BIGINT AUTO_INCREMENT, pollid INT NOT NULL, userid INT NOT NULL, blocked VARCHAR(1) DEFAULT '1' NOT NULL, remoteip VARCHAR(30) NOT NULL, datecreated DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE LUM_PollData (polldataid INT AUTO_INCREMENT, pollid INT DEFAULT '0' NOT NULL, name VARCHAR(200) DEFAULT '' NOT NULL, votes INT DEFAULT '0' NOT NULL, PRIMARY KEY(polldataid)) ENGINE = INNODB;
CREATE TABLE LUM_PollRoleBlock (id BIGINT AUTO_INCREMENT, pollid INT DEFAULT '0' NOT NULL, roleid INT DEFAULT '0' NOT NULL, blocked VARCHAR(1) DEFAULT '1' NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE LUM_Project (projectid INT UNSIGNED AUTO_INCREMENT, categoryid INT UNSIGNED NOT NULL, categoryparentid INT NOT NULL, projecttype VARCHAR(255) NOT NULL, websiteurl TEXT NOT NULL, imageurl TEXT NOT NULL, categoryuri TEXT NOT NULL, sidebarhtml TEXT NOT NULL, PRIMARY KEY(projectid)) ENGINE = INNODB;
CREATE TABLE LUM_Releases (discussionid INT, labelname VARCHAR(255), downloadlink TEXT, ismix VARCHAR(1), PRIMARY KEY(discussionid)) ENGINE = INNODB;
CREATE TABLE LUM_Role (roleid INT AUTO_INCREMENT, name VARCHAR(100) DEFAULT '' NOT NULL, icon VARCHAR(155) DEFAULT '' NOT NULL, description VARCHAR(200) DEFAULT '' NOT NULL, active VARCHAR(1) DEFAULT '1' NOT NULL, permission_sign_in VARCHAR(1) DEFAULT '0' NOT NULL, permission_html_allowed VARCHAR(1) DEFAULT '0' NOT NULL, permission_receive_application_notification VARCHAR(1) DEFAULT '0' NOT NULL, permissions TEXT, priority INT DEFAULT '0' NOT NULL, unauthenticated VARCHAR(1) DEFAULT '0' NOT NULL, PRIMARY KEY(roleid)) ENGINE = INNODB;
CREATE TABLE LUM_Style (styleid INT AUTO_INCREMENT, authuserid INT DEFAULT '0' NOT NULL, name VARCHAR(50) DEFAULT '' NOT NULL, url VARCHAR(255) DEFAULT '' NOT NULL, previewimage VARCHAR(20) DEFAULT '' NOT NULL, PRIMARY KEY(styleid)) ENGINE = INNODB;
CREATE TABLE LUM_User (userid INT AUTO_INCREMENT, roleid INT DEFAULT '0' NOT NULL, styleid INT DEFAULT '1' NOT NULL, customstyle VARCHAR(255), firstname VARCHAR(50) DEFAULT '' NOT NULL, lastname VARCHAR(50) DEFAULT '' NOT NULL, name VARCHAR(20) DEFAULT '' NOT NULL, password LONGBLOB, verificationkey VARCHAR(50) DEFAULT '' NOT NULL, emailverificationkey VARCHAR(50), email VARCHAR(200) DEFAULT '' NOT NULL, utilizeemail VARCHAR(1) DEFAULT '0' NOT NULL, showname VARCHAR(1) DEFAULT '1' NOT NULL, icon VARCHAR(255), picture VARCHAR(255), attributes TEXT, countvisit INT DEFAULT '0' NOT NULL, countdiscussions INT DEFAULT '0' NOT NULL, countcomments INT DEFAULT '0' NOT NULL, datefirstvisit DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, datelastactive DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, remoteip VARCHAR(100) DEFAULT '' NOT NULL, lastdiscussionpost DATETIME, discussionspamcheck INT DEFAULT '0' NOT NULL, lastcommentpost DATETIME, commentspamcheck INT DEFAULT '0' NOT NULL, userblockscategories VARCHAR(1) DEFAULT '0' NOT NULL, defaultformattype VARCHAR(20), discovery TEXT, preferences TEXT, sendnewapplicantnotifications VARCHAR(1) DEFAULT '0' NOT NULL, subscribeown TINYINT DEFAULT '0' NOT NULL, notified TINYINT DEFAULT '0' NOT NULL, ldupdatetime INT, ldlastupdate DATETIME, subscribecomment TINYINT DEFAULT '1', subscribedentireforum TINYINT DEFAULT '0', keepemailing TINYINT DEFAULT '0', PRIMARY KEY(userid)) ENGINE = INNODB;
CREATE TABLE LUM_UserBookmark (userid INT, discussionid INT, PRIMARY KEY(userid, discussionid)) ENGINE = INNODB;
CREATE TABLE LUM_UserDiscussionWatch (userid INT, discussionid INT, countcomments INT DEFAULT '0' NOT NULL, lastviewed DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, PRIMARY KEY(userid, discussionid)) ENGINE = INNODB;
CREATE TABLE LUM_UserField (userfieldid INT AUTO_INCREMENT, userid INT DEFAULT '0' NOT NULL, userfielddefid INT DEFAULT '0' NOT NULL, valueset TINYINT DEFAULT '0' NOT NULL, valuetext TEXT, valueint INT, valuefloat FLOAT(18, 2), PRIMARY KEY(userfieldid)) ENGINE = INNODB;
CREATE TABLE LUM_UserFieldDef (userfielddefid INT AUTO_INCREMENT, title VARCHAR(200) DEFAULT '' NOT NULL, type VARCHAR(30) DEFAULT 'text' NOT NULL, status VARCHAR(1) DEFAULT '0' NOT NULL, priority INT DEFAULT '0' NOT NULL, defaultvalue TEXT, options TEXT, PRIMARY KEY(userfielddefid)) ENGINE = INNODB;
CREATE TABLE LUM_UserFieldPerms (userfieldpermid INT AUTO_INCREMENT, userfielddefid INT DEFAULT '0' NOT NULL, roleid INT DEFAULT '0' NOT NULL, permcode VARCHAR(10) DEFAULT 'NONE' NOT NULL, PRIMARY KEY(userfieldpermid)) ENGINE = INNODB;
CREATE TABLE LUM_UserRoleHistory (id BIGINT AUTO_INCREMENT, userid INT DEFAULT '0' NOT NULL, roleid INT DEFAULT '0' NOT NULL, date DATETIME DEFAULT '0000-00-00 00:00:00' NOT NULL, adminuserid INT DEFAULT '0' NOT NULL, notes VARCHAR(200), remoteip VARCHAR(100), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE LUM_Zeitgeist (zeitgeistid INT UNSIGNED AUTO_INCREMENT, ispublished TINYINT(1) DEFAULT '0' NOT NULL, datestart DATE NOT NULL, dateend DATE NOT NULL, image TEXT, description TEXT, PRIMARY KEY(zeitgeistid)) ENGINE = INNODB;
CREATE TABLE sf_guard_forgot_password (id BIGINT AUTO_INCREMENT, user_id BIGINT NOT NULL, unique_key VARCHAR(255), expires_at DATETIME NOT NULL, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group (id BIGINT AUTO_INCREMENT, name VARCHAR(255), description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_group_permission (group_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(group_id, permission_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_permission (id BIGINT AUTO_INCREMENT, name VARCHAR(255), description TEXT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_remember_key (id BIGINT AUTO_INCREMENT, user_id BIGINT, remember_key VARCHAR(32), ip_address VARCHAR(50), created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, INDEX user_id_idx (user_id), PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user (id BIGINT AUTO_INCREMENT, first_name VARCHAR(255), last_name VARCHAR(255), email_address VARCHAR(255) NOT NULL, username VARCHAR(128) NOT NULL, algorithm VARCHAR(128) DEFAULT 'sha1' NOT NULL, salt VARCHAR(128), password VARCHAR(128), is_active TINYINT DEFAULT '1', is_super_admin TINYINT DEFAULT '0', last_login DATETIME, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_group (user_id BIGINT, group_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, group_id)) ENGINE = INNODB;
CREATE TABLE sf_guard_user_permission (user_id BIGINT, permission_id BIGINT, created_at DATETIME NOT NULL, updated_at DATETIME NOT NULL, PRIMARY KEY(user_id, permission_id)) ENGINE = INNODB;
ALTER TABLE LUM_Comment ADD CONSTRAINT LUM_Comment_commentid_LUM_Comment_has_LUM_Entity_commentid FOREIGN KEY (commentid) REFERENCES LUM_Comment_has_LUM_Entity(commentid);
ALTER TABLE LUM_Comment_has_LUM_Entity ADD CONSTRAINT LUM_Comment_has_LUM_Entity_commentid_LUM_Comment_commentid FOREIGN KEY (commentid) REFERENCES LUM_Comment(commentid);
ALTER TABLE sf_guard_forgot_password ADD CONSTRAINT sf_guard_forgot_password_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id);
ALTER TABLE sf_guard_group_permission ADD CONSTRAINT sf_guard_group_permission_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id);
ALTER TABLE sf_guard_remember_key ADD CONSTRAINT sf_guard_remember_key_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE sf_guard_user_group ADD CONSTRAINT sf_guard_user_group_group_id_sf_guard_group_id FOREIGN KEY (group_id) REFERENCES sf_guard_group(id);
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_user_id_sf_guard_user_id FOREIGN KEY (user_id) REFERENCES sf_guard_user(id);
ALTER TABLE sf_guard_user_permission ADD CONSTRAINT sf_guard_user_permission_permission_id_sf_guard_permission_id FOREIGN KEY (permission_id) REFERENCES sf_guard_permission(id);
